on: [push, pull_request]

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  build:
    name: Build
    needs: [ lint ]
    strategy:
      fail-fast: true
      matrix:
        config:
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            shell: msys2 {0}
            binary: cncli.exe
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            shell: bash
            binary: cncli
          - os: macos-latest
            target: x86_64-apple-darwin
            shell: bash
            binary: cncli
        toolchain: [ stable ]
        cross: [ false ]
    runs-on: ${{ matrix.config.os }}
    defaults:
      run:
        shell: ${{ matrix.config.shell }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true # recurse submodules
      - name: Install Dependencies (Windows MingGW64)
        if: matrix.config.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: MINGW64
          install: >-
            git
            base-devel
            mingw64/mingw-w64-x86_64-rust
      - name: Install Dependencies (MacOS)
        if: matrix.config.os == 'macos-latest'
        run: brew install autoconf automake libtool
      - name: Install Dependencies (Ubuntu)
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y automake build-essential pkg-config libffi-dev libgmp-dev libssl-dev libtinfo-dev libsystemd-dev zlib1g-dev make g++ tmux git jq wget libncursesw5 libtool autoconf
      - name: Build Libsodium
        run: autoreconf -vfi && ./configure && make
        working-directory: contrib/libsodium
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.config.target }}
          override: true
          default: true
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross }}
          command: test
          args: --features external-contrib-build --target ${{ matrix.config.target }}